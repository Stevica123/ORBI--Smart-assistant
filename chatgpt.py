import time
from openai import OpenAI
import openai

client = OpenAI(api_key="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") 

def query_chatgpt(question, retries=3, delay=3):
    for attempt in range(1, retries + 1):
        try:
            response = client.chat.completions.create(
                model="gpt-3.5-turbo",
                messages=[
                    {"role": "system", "content": "–û–¥–≥–æ–≤–∞—Ä–∞—ò –∫–æ–Ω—Ü–∏–∑–Ω–æ —Å–æ –º–∞–∫—Å–∏–º—É–º 5 —Ä–µ—á–µ–Ω–∏—Ü–∏. –ö–æ—Ä–∏—Å—Ç–∏ 2 –¥–æ 5 —Ä–µ—á–µ–Ω–∏—Ü–∏."},
                    {"role": "user", "content": question}
                ],
                timeout=10
            )
            return response.choices[0].message.content.strip()
        except openai.APIError as e:
            if "insufficient_quota" in str(e):
                return "‚ùó –ù–µ–º–∞—à –¥–æ–≤–æ–ª–Ω–æ –∫—Ä–µ–¥–∏—Ç –∑–∞ –¥–∞ –≥–æ –∫–æ—Ä–∏—Å—Ç–∏—à –º–æ–¥–µ–ª–æ—Ç. –í–Ω–µ—Å–∏ –ø–ª–∞—Ç–µ–∂–Ω–∞ –∫–∞—Ä—Ç–∏—á–∫–∞ –≤–æ OpenAI Billing."
            print(f"–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –ø–æ–≤–∏–∫ –¥–æ OpenAI API: {e}. –û–±–∏–¥ {attempt} –æ–¥ {retries}.")
            if attempt < retries:
                time.sleep(delay)
            else:
                return "‚ö†Ô∏è –ù–∞—Å—Ç–∞–Ω–∞ –≥—Ä–µ—à–∫–∞. –û–±–∏–¥–∏ —Å–µ –ø–æ–¥–æ—Ü–Ω–∞."

if __name__ == "__main__":
    while True:
        question = input("–ü–æ—Å—Ç–∞–≤–∏ –ø—Ä–∞—à–∞—ö–µ (–∏–ª–∏ 'exit' –∑–∞ –∏–∑–ª–µ–∑): ")
        if question.lower() == "exit":
            break
        print("üü† –ü—Ä–∞—à–∞—ö–µ—Ç–æ –Ω–µ –µ –≤–æ –±–∞–∑–∞—Ç–∞, –ø—Ä–∞—à—É–≤–∞–º ChatGPT 3.5...")
        answer = query_chatgpt(question)
        print(f"–û–¥–≥–æ–≤–æ—Ä: {answer}\n")
